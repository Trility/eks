resource "aws_iam_policy" "app_mesh_controller" {
  name = "eks_app_mesh_controller"
  policy = "${file("app_mesh_controller_policy.json")}"
}

resource "aws_iam_role" "app_mesh_controller" {
  name = "eks_app_mesh_controller"

  assume_role_policy = jsonencode({
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Principal": {
          "Federated": aws_iam_openid_connect_provider.cluster.arn
        },
        "Action": "sts:AssumeRoleWithWebIdentity",
        "Condition": {
          "StringEquals": {
            "${replace(aws_iam_openid_connect_provider.cluster.url, "https://", "")}:sub": "system:serviceaccount:appmesh-system:appmesh-controller"
          }
        }
      }
    ]
  })
}

resource "aws_iam_policy_attachment" "app_mesh_controller" {
  name = "eks_app_mesh_controller"
  policy_arn = aws_iam_policy.app_mesh_controller.arn
  roles = [ aws_iam_role.app_mesh_controller.name ]
}

resource "kubernetes_namespace" "app_mesh_controller" {
  metadata {
    name = "appmesh-system"
  }
  depends_on = [
    aws_eks_node_group.node_group,
  ]
}

resource "kubernetes_service_account" "app_mesh_controller" {
  metadata {
    name = "appmesh-controller"
    namespace = "appmesh-system"
    annotations = {
      "eks.amazonaws.com/role-arn" = aws_iam_role.app_mesh_controller.arn
    }
  }
}

resource "kubectl_manifest" "app_mesh_controller_crds" {
  yaml_body = file("app_mesh_controller_crds.yaml")
}

resource "helm_release" "app_mesh_controller" {
  name = "appmesh-controller"
  namespace = "appmesh-system"
  repository = "https://aws.github.io/eks-charts"
  chart = "appmesh-controller"
  version = "1.4.2"
  
  set {
    name = "serviceAccount.create"
    value = "false"
  }
}
